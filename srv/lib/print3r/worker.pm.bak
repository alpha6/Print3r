package print3r::worker;

use v5.20;
our $VERSION = version->declare("v0.0.1");

sub new {
    my $class = shift;
    bless 
    { handler => undef,
    }, $class;
}


sub connect {
    my $self = shift;
    my $adress = shift;
    my $port = shift;
    
    use IO::Socket::INET;
     
    # auto-flush on socket
     $| = 1;
      
      # creating a listening socket
      my $socket = new IO::Socket::INET (
          LocalHost => $adress,
              LocalPort => $port,
                  Proto => 'tcp',
                      Listen => 5,
                          Reuse => 1
                          );
                          die "cannot create socket $!\n" unless $socket;
                          print "server waiting for client connection on port 7777\n";

                          $self->{'handler'} = $socket;

                          return 1;
}

sub send {
    my $self = shift;
    my $msg = shift;

    $self->{'hanlder'}->send(encode_json({ msg => $msg }));
}

sub status {
    my $self = shift;
    my $status = shift;

    $self->{'hanlder'}->send(encode_json({ status => $status }));
}


sub read {
    my $self = shift;
    
    my $rbuf = '';
    $self->{'handler'}->read($rbuf, 1024);

    eval {
        return decode_json($rbuf);
    };
    if ($@) {
        say "err: $@";
        return "";
    }
}

1;
